!
!  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
!  SLEPc - Scalable Library for Eigenvalue Problem Computations
!  Copyright (c) 2002-2016, Universitat Politecnica de Valencia, Spain
!
!  This file is part of SLEPc.
!
!  SLEPc is free software: you can redistribute it and/or modify it under  the
!  terms of version 3 of the GNU Lesser General Public License as published by
!  the Free Software Foundation.
!
!  SLEPc  is  distributed in the hope that it will be useful, but WITHOUT  ANY
!  WARRANTY;  without even the implied warranty of MERCHANTABILITY or  FITNESS
!  FOR  A  PARTICULAR PURPOSE. See the GNU Lesser General Public  License  for
!  more details.
!
!  You  should have received a copy of the GNU Lesser General  Public  License
!  along with SLEPc. If not, see <http://www.gnu.org/licenses/>.
!  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
!
      interface SVDGetDimensions
      subroutine SVDGetDimensions000(a,b,c,d,z)
      use slepcsvddef
       SVD a
       PetscInt b
       PetscInt c
       PetscInt d
       integer z
       end subroutine
      subroutine SVDGetDimensions100(a,b,c,d,z)
      use slepcsvddef
       SVD a
       PetscInt b(*)
       PetscInt c
       PetscInt d
       integer z
       end subroutine
      subroutine SVDGetDimensions010(a,b,c,d,z)
      use slepcsvddef
       SVD a
       PetscInt b
       PetscInt c(*)
       PetscInt d
       integer z
       end subroutine
      subroutine SVDGetDimensions001(a,b,c,d,z)
      use slepcsvddef
       SVD a
       PetscInt b
       PetscInt c
       PetscInt d(*)
       integer z
       end subroutine
      subroutine SVDGetDimensions110(a,b,c,d,z)
      use slepcsvddef
       SVD a
       PetscInt b(*)
       PetscInt c(*)
       PetscInt d
       integer z
       end subroutine
      subroutine SVDGetDimensions011(a,b,c,d,z)
      use slepcsvddef
       SVD a
       PetscInt b
       PetscInt c(*)
       PetscInt d(*)
       integer z
       end subroutine
       end interface SVDGetDimensions

      interface
      subroutine SVDGetSingularTriplet(a,b,c,d,e,z)
      use slepcsvddef
       SVD a
       PetscInt b
       PetscReal c
       Vec d
       Vec e
       integer z
       end subroutine
      end interface


