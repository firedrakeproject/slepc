!
!  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
!  SLEPc - Scalable Library for Eigenvalue Problem Computations
!  Copyright (c) 2002-2016, Universitat Politecnica de Valencia, Spain
!
!  This file is part of SLEPc.
!
!  SLEPc is free software: you can redistribute it and/or modify it under  the
!  terms of version 3 of the GNU Lesser General Public License as published by
!  the Free Software Foundation.
!
!  SLEPc  is  distributed in the hope that it will be useful, but WITHOUT  ANY
!  WARRANTY;  without even the implied warranty of MERCHANTABILITY or  FITNESS
!  FOR  A  PARTICULAR PURPOSE. See the GNU Lesser General Public  License  for
!  more details.
!
!  You  should have received a copy of the GNU Lesser General  Public  License
!  along with SLEPc. If not, see <http://www.gnu.org/licenses/>.
!  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
!
      interface FNRationalSetNumerator
        subroutine FNRationalSetNumerator0(a,b,c,z)
          use slepcfndef
          FN a
          PetscInt b
          PetscScalar c
          integer z
        end subroutine
        subroutine FNRationalSetNumerator1(a,b,c,z)
          use slepcfndef
          FN a
          PetscInt b
          PetscScalar c(*)
          integer z
        end subroutine
      end interface FNRationalSetNumerator

      interface FNRationalSetDenominator
        subroutine FNRationalSetDenominator0(a,b,c,z)
          use slepcfndef
          FN a
          PetscInt b
          PetscScalar c
          integer z
        end subroutine
        subroutine FNRationalSetDenominator1(a,b,c,z)
          use slepcfndef
          FN a
          PetscInt b
          PetscScalar c(*)
          integer z
        end subroutine
      end interface FNRationalSetDenominator

      interface FNRationalGetNumerator
        subroutine FNRationalGetNumerator00(a,b,c,z)
          use slepcfndef
          FN a
          PetscInt b
          PetscScalar c
          integer z
        end subroutine
        subroutine FNRationalGetNumerator10(a,b,c,z)
          use slepcfndef
          FN a
          PetscInt b(*)
          PetscScalar c
          integer z
        end subroutine
        subroutine FNRationalGetNumerator01(a,b,c,z)
          use slepcfndef
          FN a
          PetscInt b
          PetscScalar c(*)
          integer z
        end subroutine
        subroutine FNRationalGetNumerator11(a,b,c,z)
          use slepcfndef
          FN a
          PetscInt b(*)
          PetscScalar c(*)
          integer z
        end subroutine
      end interface FNRationalGetNumerator

      interface FNRationalGetDenominator
        subroutine FNRationalGetDenominator00(a,b,c,z)
          use slepcfndef
          FN a
          PetscInt b
          PetscScalar c
          integer z
        end subroutine
        subroutine FNRationalGetDenominator10(a,b,c,z)
          use slepcfndef
          FN a
          PetscInt b(*)
          PetscScalar c
          integer z
        end subroutine
        subroutine FNRationalGetDenominator01(a,b,c,z)
          use slepcfndef
          FN a
          PetscInt b
          PetscScalar c(*)
          integer z
        end subroutine
        subroutine FNRationalGetDenominator11(a,b,c,z)
          use slepcfndef
          FN a
          PetscInt b(*)
          PetscScalar c(*)
          integer z
        end subroutine
      end interface FNRationalGetDenominator

