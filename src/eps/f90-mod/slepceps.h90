!
!  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
!  SLEPc - Scalable Library for Eigenvalue Problem Computations
!  Copyright (c) 2002-2016, Universitat Politecnica de Valencia, Spain
!
!  This file is part of SLEPc.
!
!  SLEPc is free software: you can redistribute it and/or modify it under  the
!  terms of version 3 of the GNU Lesser General Public License as published by
!  the Free Software Foundation.
!
!  SLEPc  is  distributed in the hope that it will be useful, but WITHOUT  ANY
!  WARRANTY;  without even the implied warranty of MERCHANTABILITY or  FITNESS
!  FOR  A  PARTICULAR PURPOSE. See the GNU Lesser General Public  License  for
!  more details.
!
!  You  should have received a copy of the GNU Lesser General  Public  License
!  along with SLEPc. If not, see <http://www.gnu.org/licenses/>.
!  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
!
      interface EPSGetDimensions
      subroutine EPSGetDimensions000(a,b,c,d,z)
      use slepcepsdef
       EPS a
       PetscInt b
       PetscInt c
       PetscInt d
       integer z
       end subroutine
      subroutine EPSGetDimensions100(a,b,c,d,z)
      use slepcepsdef
       EPS a
       PetscInt b(*)
       PetscInt c
       PetscInt d
       integer z
       end subroutine
      subroutine EPSGetDimensions010(a,b,c,d,z)
      use slepcepsdef
       EPS a
       PetscInt b
       PetscInt c(*)
       PetscInt d
       integer z
       end subroutine
      subroutine EPSGetDimensions001(a,b,c,d,z)
      use slepcepsdef
       EPS a
       PetscInt b
       PetscInt c
       PetscInt d(*)
       integer z
       end subroutine
      subroutine EPSGetDimensions110(a,b,c,d,z)
      use slepcepsdef
       EPS a
       PetscInt b(*)
       PetscInt c(*)
       PetscInt d
       integer z
       end subroutine
      subroutine EPSGetDimensions011(a,b,c,d,z)
      use slepcepsdef
       EPS a
       PetscInt b
       PetscInt c(*)
       PetscInt d(*)
       integer z
       end subroutine
       end interface EPSGetDimensions

      interface
      subroutine EPSSetOperators(a,b,c,z)
      use slepcepsdef
       EPS a ! EPS
       Mat b ! Mat
       Mat c ! Mat
       integer z
       end subroutine
      end interface