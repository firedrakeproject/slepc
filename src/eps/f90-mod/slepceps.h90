!
!  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
!  SLEPc - Scalable Library for Eigenvalue Problem Computations
!  Copyright (c) 2002-2016, Universitat Politecnica de Valencia, Spain
!
!  This file is part of SLEPc.
!
!  SLEPc is free software: you can redistribute it and/or modify it under  the
!  terms of version 3 of the GNU Lesser General Public License as published by
!  the Free Software Foundation.
!
!  SLEPc  is  distributed in the hope that it will be useful, but WITHOUT  ANY
!  WARRANTY;  without even the implied warranty of MERCHANTABILITY or  FITNESS
!  FOR  A  PARTICULAR PURPOSE. See the GNU Lesser General Public  License  for
!  more details.
!
!  You  should have received a copy of the GNU Lesser General  Public  License
!  along with SLEPc. If not, see <http://www.gnu.org/licenses/>.
!  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
!
      interface EPSGetDimensions
        subroutine EPSGetDimensions000(a,b,c,d,z)
          use slepcepsdef
          EPS a
          PetscInt b
          PetscInt c
          PetscInt d
          integer z
        end subroutine
        subroutine EPSGetDimensions100(a,b,c,d,z)
          use slepcepsdef
          EPS a
          PetscInt b(*)
          PetscInt c
          PetscInt d
          integer z
        end subroutine
        subroutine EPSGetDimensions010(a,b,c,d,z)
          use slepcepsdef
          EPS a
          PetscInt b
          PetscInt c(*)
          PetscInt d
          integer z
        end subroutine
        subroutine EPSGetDimensions001(a,b,c,d,z)
          use slepcepsdef
          EPS a
          PetscInt b
          PetscInt c
          PetscInt d(*)
          integer z
        end subroutine
        subroutine EPSGetDimensions110(a,b,c,d,z)
          use slepcepsdef
          EPS a
          PetscInt b(*)
          PetscInt c(*)
          PetscInt d
          integer z
        end subroutine
        subroutine EPSGetDimensions011(a,b,c,d,z)
          use slepcepsdef
          EPS a
          PetscInt b
          PetscInt c(*)
          PetscInt d(*)
          integer z
        end subroutine
        subroutine EPSGetDimensions101(a,b,c,d,z)
          use slepcepsdef
          EPS a
          PetscInt b(*)
          PetscInt c
          PetscInt d(*)
          integer z
        end subroutine
      end interface EPSGetDimensions

      interface
        subroutine EPSSetOperators(a,b,c,z)
          use slepcepsdef
          EPS a
          Mat b
          Mat c
          integer z
        end subroutine
      end interface

      interface EPSGetEigenpair
        subroutine EPSGetEigenpair00(a,b,c,d,e,f,z)
          use slepcepsdef
          EPS a
          PetscInt b
          PetscScalar c
          PetscScalar d
          Vec e
          Vec f
          integer z
        end subroutine
        subroutine EPSGetEigenpair10(a,b,c,d,e,f,z)
          use slepcepsdef
          EPS a
          PetscInt b
          PetscScalar c(*)
          PetscScalar d
          Vec e
          Vec f
          integer z
        end subroutine
        subroutine EPSGetEigenpair01(a,b,c,d,e,f,z)
          use slepcepsdef
          EPS a
          PetscInt b
          PetscScalar c
          PetscScalar d(*)
          Vec e
          Vec f
          integer z
        end subroutine
        subroutine EPSGetEigenpair11(a,b,c,d,e,f,z)
          use slepcepsdef
          EPS a
          PetscInt b
          PetscScalar c(*)
          PetscScalar d(*)
          Vec e
          Vec f
          integer z
        end subroutine
      end interface EPSGetEigenpair

      interface EPSGetEigenvalue
        subroutine EPSGetEigenvalue00(a,b,c,d,z)
          use slepcepsdef
          EPS a
          PetscInt b
          PetscScalar c
          PetscScalar d
          integer z
        end subroutine
        subroutine EPSGetEigenvalue10(a,b,c,d,z)
          use slepcepsdef
          EPS a
          PetscInt b
          PetscScalar c(*)
          PetscScalar d
          integer z
        end subroutine
        subroutine EPSGetEigenvalue01(a,b,c,d,z)
          use slepcepsdef
          EPS a
          PetscInt b
          PetscScalar c
          PetscScalar d(*)
          integer z
        end subroutine
      end interface EPSGetEigenvalue

      interface EPSGetTolerances
        subroutine EPSGetTolerances00(a,b,c,z)
          use slepcepsdef
          EPS a
          PetscReal b
          PetscInt c
          integer z
        end subroutine
        subroutine EPSGetTolerances10(a,b,c,z)
          use slepcepsdef
          EPS a
          PetscReal b(*)
          PetscInt c
          integer z
        end subroutine
        subroutine EPSGetTolerances01(a,b,c,z)
          use slepcepsdef
          EPS a
          PetscReal b
          PetscInt c(*)
          integer z
        end subroutine
      end interface EPSGetTolerances

      interface EPSGetBalance
        subroutine EPSGetBalance000(a,b,c,d,z)
          use slepcepsdef
          EPS a
          EPSBalance b
          PetscInt c
          PetscReal d
          integer z
        end subroutine
        subroutine EPSGetBalance100(a,b,c,d,z)
          use slepcepsdef
          EPS a
          EPSBalance b(*)
          PetscInt c
          PetscReal d
          integer z
        end subroutine
        subroutine EPSGetBalance010(a,b,c,d,z)
          use slepcepsdef
          EPS a
          EPSBalance b
          PetscInt c(*)
          PetscReal d
          integer z
        end subroutine
        subroutine EPSGetBalance001(a,b,c,d,z)
          use slepcepsdef
          EPS a
          EPSBalance b
          PetscInt c
          PetscReal d(*)
          integer z
        end subroutine
        subroutine EPSGetBalance110(a,b,c,d,z)
          use slepcepsdef
          EPS a
          EPSBalance b(*)
          PetscInt c(*)
          PetscReal d
          integer z
        end subroutine
        subroutine EPSGetBalance011(a,b,c,d,z)
          use slepcepsdef
          EPS a
          EPSBalance b
          PetscInt c(*)
          PetscReal d(*)
          integer z
        end subroutine
        subroutine EPSGetBalance101(a,b,c,d,z)
          use slepcepsdef
          EPS a
          EPSBalance b(*)
          PetscInt c
          PetscReal d(*)
          integer z
        end subroutine
      end interface EPSGetBalance

